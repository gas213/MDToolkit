### LAMMPS Input File - NPT Equilibration of cube droplet (dynamic box)
# From MDToolkit template file: npt.in

## Configuration Variables
# FILL IN {{FIELDS}}
# IF YOU ARE RESTARTING A RUN WITHIN THE SAME DIRECTORY, RENAME YOUR LOG FILES SO THEY DON'T GET OVERWRITTEN

# Is this a restart? (true if starting from a binary restart file, false if starting from a data text file)
variable        IS_RESTART equal {{true/false}}
# File name of the binary restart file or initial data text file
# For restart files, using the * wildcard will find the largest-numbered restart file in the directory (ex: restart_*.rs)
variable        START_DATA string {{file}}

# Does the atom type/mass list include definitions for sodium and chlorine?
# (Regardless of whether there are any sodium or chlorine atoms present)
variable        IS_SALT_DEFINED equal {{true/false}}
# Are there actually any sodium or chlorine atoms present in the data?
variable        IS_SALT_PRESENT equal {{true/false}}

# Thermostat temperature in degrees Celsius (25.0, 80.0)
variable	    TEMP_C equal {{T}}
# Barostat pressure in atmospheres (1.0)
variable        P_ATM equal {{P}}

# Size of time step (in "real" units, this would be femtoseconds)
variable        STEP_SIZE equal {{N}}
# Number of time steps to run; 500k steps == 1 ns if time step size is 2 fs
variable	    STEPS equal {{N}}
# Frequency of creating dump files (every N steps); try 1000
variable	    DUMP_FREQ equal {{N}}
# Frequency of writing thermo output to the LAMMPS log file (every N steps); try 100
variable	    THERMO_FREQ equal {{N}}
# Frequency of writing restart files (every N steps); try at least 2 restarts per day of wall time
variable	    RESTART_FREQ equal {{N}}

# Random number seeds for velocity commands (Prof. Webb recommends 8-digit integer)
variable        SEED_H2O equal {{N}}
variable        SEED_CL equal {{N}}
variable        SEED_NA equal {{N}}

## Initialization

units           real
atom_style      full
boundary        p p p
pair_style      lj/cut/coul/long 10 10
pair_modify     mix arithmetic
pair_modify     tail no
special_bonds   amber
bond_style      harmonic
angle_style     harmonic
dihedral_style  opls
improper_style  none

## Read an initial data file or a restart file

if "${IS_RESTART}" then &
    "read_restart   ${START_DATA}" &
else &
    "read_data      ${START_DATA}"

## Variables with auto-calculated values

# Thermostat temperature in degrees Kelvin
variable        TEMP_K equal $(v_TEMP_C + 273.15)

## Neighbor parameters and force field coefficients

neighbor        2.0 bin
neigh_modify    delay 0
kspace_style    pppm 1e-5
kspace_modify   order 4

## Define atom/molecule groups

if "${IS_SALT_DEFINED}" then &
    "group      H2O type 6 7" &
else &
    "group      H2O type 4 5"

if "${IS_SALT_PRESENT}" then &
    "group      CHLORINE type 4" &
    "group      SODIUM type 5"

## Dump settings

dump            DUMP_TEXT all custom $(v_DUMP_FREQ) dump_*.dump id mol type x y z
dump_modify     DUMP_TEXT sort id

# NetCDF is a binary dump format, only certain versions of LAMMPS support it
# dump            DUMP_NETCDF all netcdf $(v_DUMP_FREQ) dump_*.nc id mol type x y z
# dump_modify     DUMP_NETCDF sort id

## Restart settings

restart		    $(v_RESTART_FREQ) restart_*.rs

## Constraint for bond lengths

fix 		    SHAKE all shake 1e-5 1000 0 m 1.0

## Thermostatting

# Tdamp of 100*dt and Pdamp of 1000*dt recommended by this page: https://docs.lammps.org/fix_nh.html
fix             NPT_H2O H2O npt temp $(v_TEMP_K) $(v_TEMP_K) $(100.0*dt) iso $(v_P_ATM) $(v_P_ATM) $(1000.0*dt)
velocity        H2O create $(v_TEMP_K) $(v_SEED_H2O) dist gaussian

if "${IS_SALT_PRESENT}" then &
    "fix        NVT_Cl CHLORINE nvt temp $(v_TEMP_K) $(v_TEMP_K) $(100.0*dt)" &
    "fix        NVT_Na SODIUM nvt temp $(v_TEMP_K) $(v_TEMP_K) $(100.0*dt)" &
    "velocity   CHLORINE create $(v_TEMP_K) $(v_SEED_CL) dist gaussian" &
    "velocity   SODIUM create $(v_TEMP_K) $(v_SEED_NA) dist gaussian"

## Thermodynamic output settings

thermo          $(v_THERMO_FREQ)
thermo_style    custom step time temp pe ke etotal enthalpy press vol density lx ly lz pxx pyy pzz pxy pxz pyz
thermo_modify   lost ignore flush yes

## Run the simulation

# Time step size is in femtoseconds
timestep        $(v_STEP_SIZE)
run             $(v_STEPS)

## Write restart data

write_data      write_*.data